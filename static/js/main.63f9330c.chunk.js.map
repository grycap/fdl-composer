{"version":3,"sources":["components/Code.tsx","components/Content.tsx","components/Message.tsx","components/Page.tsx","components/Sidebar.tsx","components/SidebarItem.tsx","misc/chartScheme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["styled","pre","div","Message","createGlobalStyle","PageContent","Sidebar","Outer","SidebarItem","type","ports","properties","draggable","onDragStart","event","dataTransfer","setData","REACT_FLOW_CHART","JSON","stringify","initialState","offset","x","y","scale","nodes","links","selected","hovered","modalVisible","Header","Layout","Content","StyledButton","Button","NodeInnerCustom","input","node","config","React","useState","visible","setVisible","name","onDoubleClick","title","onOk","test","onCancel","okButtonProps","disabled","cancelButtonProps","App","state","cloneDeep","nodeValues","Object","values","this","oscarFxs","filter","map","awsFxs","oneDataStorage","s3Storage","linkValues","console","log","output","yaml","dump","functions","oscar","aws","storage_providers","s3","onedata","blob","Blob","saveAs","stateStringified","document","createElement","onchange","e","fr","FileReader","onload","a","target","result","setState","parse","readAsText","files","click","chart","stateActions","mapValues","actions","func","className","theme","mode","ghost","icon","DownloadOutlined","onClick","exportState","UploadOutlined","importState","ExportOutlined","exportToYaml","callbacks","Components","NodeInner","port1","id","path","port2","port3","port4","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"owBAEoBA,UAAOC,IAAV,K,qJCAMD,UAAOE,IAAV,K,0ICAb,IAAMC,EAAUH,UAAOE,IAAV,K,ycCCAE,4BAAH,KAAjB,IAeaC,EAAcL,UAAOE,IAAV,K,8KChBjB,IAAMI,EAAUN,UAAOE,IAAV,K,sNCEpB,IAAMK,EAAQP,UAAOE,IAAV,KAgBEM,EAAc,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,WACzC,OACE,cAACJ,EAAD,CACEK,WAAW,EACXC,YAAa,SAACC,GACZA,EAAMC,aAAaC,QACjBC,mBACAC,KAAKC,UAAU,CAAEV,OAAMC,QAAOC,iBALpC,SASGF,KC1BMW,EAAkC,CAC7CC,OAAQ,CACNC,EAAG,EACHC,EAAG,GAELC,MAAO,EACPC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,QAAS,GACTC,cAAc,G,iaCKRC,EAAoBC,IAApBD,OACFvB,GADsBwB,IAAZC,QACFhC,UAAOE,IAAV,MAIL+B,EAAejC,kBAAOkC,IAAPlC,CAAH,KAcZmC,GAVQnC,UAAOoC,MAAV,KAUa,SAAC,GAA8C,IAAD,MAA3CC,EAA2C,EAA3CA,KAA2C,KAArCC,OACDC,IAAMC,UAAS,IADuB,mBAC7DC,EAD6D,KACpDC,EADoD,KAEpE,OAAQL,EAAK5B,MACX,IAAK,iBACL,IAAK,kBACL,IAAK,aACL,IAAK,mBACH,OACE,cAAC,EAAD,UACE,6BAAI,UAAA4B,EAAK1B,kBAAL,eAAiBgC,OAAQN,EAAK5B,SAGxC,QACE,OACE,eAAC,EAAD,CAAOmC,cAAe,kBAAMF,GAAW,IAAvC,UACE,cAAC,IAAD,CACEG,OAAO,UAAAR,EAAK1B,kBAAL,eAAiBgC,OAAQN,EAAK5B,KACrCgC,QAASA,EACTK,KAAM,WACJT,EAAK1B,WAAL,2BAAuB0B,EAAK1B,YAA5B,IAAwCoC,KAAM,SAC9CL,GAAW,IAEbM,SAAU,kBAAMN,GAAW,IAC3BO,cAAe,CAAEC,UAAU,GAC3BC,kBAAmB,CAAED,UAAU,KAEjC,6BAAI,UAAAb,EAAK1B,kBAAL,eAAiBgC,OAAQN,EAAK5B,aAM/B2C,EAAb,4MACSC,MAAQC,oBAAUlC,GAD3B,6DAII,IAAMmC,EAAaC,OAAOC,OAAOC,KAAKL,MAAM5B,OACtCkC,EAAWJ,EACdK,QAAO,SAACtC,GAAD,MAAuB,aAAXA,EAAEb,QACrBoD,KAAI,SAACxB,GAAD,OAAUA,EAAK1B,cAChBmD,EAASP,EACZK,QAAO,SAACtC,GAAD,MAAuB,WAAXA,EAAEb,QACrBoD,KAAI,SAACxB,GAAD,OAAUA,EAAK1B,cAChBoD,EAAiBR,EACpBK,QAAO,SAACtC,GAAD,MAAuB,qBAAXA,EAAEb,QACrBoD,KAAI,SAACxB,GAAD,OAAUA,EAAK1B,cAChBqD,EAAYT,EACfK,QAAO,SAACtC,GAAD,MAAuB,eAAXA,EAAEb,QACrBoD,KAAI,SAACxB,GAAD,OAAUA,EAAK1B,cAEhBsD,EAAaT,OAAOC,OAAOC,KAAKL,MAAM3B,OAC5CwC,QAAQC,IAAIF,GAEZ,IAAMG,EAASC,IAAKC,KAAK,CACvBC,UAAW,CAAEC,MAAOb,EAAUc,IAAKX,GACnCY,kBAAmB,CACjBC,GAAIX,EACJY,QAASb,KAGPc,EAAO,IAAIC,KAAK,CAACV,GAAS,CAC9B3D,KAAM,6BAERsE,iBAAOF,EAAM,mBA/BjB,oCAmCI,IAAMG,EAAmB9D,KAAKC,UAAUuC,KAAKL,OACvCwB,EAAO,IAAIC,KAAK,CAACE,GAAmB,CACxCvE,KAAM,6BAERsE,iBAAOF,EAAM,gBAvCjB,oCA0CwB,IAAD,OACbzC,EAAQ6C,SAASC,cAAc,SACrC9C,EAAM3B,KAAO,OACb2B,EAAM+C,SAAW,SAACC,GAEhBlB,QAAQC,IAAIiB,GACZ,IAAMC,EAAK,IAAIC,WACfD,EAAGE,OAAH,uCAAY,WAAOH,GAAP,eAAAI,EAAA,sDACVtB,QAAQC,IAAIiB,EAAGK,OAAQC,SACtB,OAADN,QAAC,IAADA,GAAA,UAAAA,EAAGK,cAAH,eAAWC,SACT,EAAKC,SAASzE,KAAK0E,MAAMR,EAAGK,OAAQC,SAH5B,2CAAZ,sDAMAL,EAAGQ,WAAWzD,EAAM0D,MAAO,KAE7B1D,EAAM2D,UAzDV,+BA4DmB,IAAD,OACRC,EAAQtC,KAAKL,MACb4C,EAAeC,oBAAUC,WAAS,SAACC,GAAD,OAAe,kBACrD,EAAKT,SAASS,EAAI,WAAJ,kBAGhB,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,CAAQA,UAAU,SAAlB,UACE,cAACvE,EAAD,UACE,eAAC,IAAD,CAAMwE,MAAM,OAAOC,KAAK,aAAxB,UACE,cAACtE,EAAD,CACEuE,OAAK,EACLC,KAAM,cAACC,EAAA,EAAD,IACNC,QAAS,kBAAM,EAAKC,eAHtB,4BAOA,cAAC3E,EAAD,CACEuE,OAAK,EACLC,KAAM,cAACI,EAAA,EAAD,IACNF,QAAS,kBAAM,EAAKG,eAHtB,wBAOA,cAAC7E,EAAD,CACEuE,OAAK,EACLC,KAAM,cAACM,EAAA,EAAD,IACNJ,QAAS,WACP,EAAKK,gBAJT,8BAWJ,eAAC3G,EAAD,WACE,cAAC,YAAD,CACE2F,MAAOA,EACPiB,UAAWhB,EACXiB,WAAY,CACVC,UAAWhF,KAGf,eAAC7B,EAAD,WACE,cAACH,EAAD,yDACA,cAAC,EAAD,CACEM,KAAK,iBACLC,MAAO,CACL0G,MAAO,CACLC,GAAI,QACJ5G,KAAM,MACNE,WAAY,CACV2G,KAAM,KAGVC,MAAO,CACLF,GAAI,QACJ5G,KAAM,QACNE,WAAY,CACV2G,KAAM,KAGVE,MAAO,CACLH,GAAI,QACJ5G,KAAM,SACNE,WAAY,CACV2G,KAAM,KAGVG,MAAO,CACLJ,GAAI,QACJ5G,KAAM,OACNE,WAAY,CACV2G,KAAM,QAKd,cAAC,EAAD,CACE7G,KAAK,kBACLC,MAAO,CACL0G,MAAO,CACLC,GAAI,QACJ5G,KAAM,MACNE,WAAY,CACV2G,KAAM,KAGVC,MAAO,CACLF,GAAI,QACJ5G,KAAM,QACNE,WAAY,CACV2G,KAAM,KAGVE,MAAO,CACLH,GAAI,QACJ5G,KAAM,SACNE,WAAY,CACV2G,KAAM,KAGVG,MAAO,CACLJ,GAAI,QACJ5G,KAAM,OACNE,WAAY,CACV2G,KAAM,QAKd,cAAC,EAAD,CACE7G,KAAK,aACLC,MAAO,CACL0G,MAAO,CACLC,GAAI,QACJ5G,KAAM,MACNE,WAAY,CACV2G,KAAM,KAGVC,MAAO,CACLF,GAAI,QACJ5G,KAAM,QACNE,WAAY,CACV2G,KAAM,KAGVE,MAAO,CACLH,GAAI,QACJ5G,KAAM,SACNE,WAAY,CACV2G,KAAM,KAGVG,MAAO,CACLJ,GAAI,QACJ5G,KAAM,OACNE,WAAY,CACV2G,KAAM,QAKd,cAAC,EAAD,CACE7G,KAAK,mBACLC,MAAO,CACL0G,MAAO,CACLC,GAAI,QACJ5G,KAAM,MACNE,WAAY,CACV2G,KAAM,KAGVC,MAAO,CACLF,GAAI,QACJ5G,KAAM,QACNE,WAAY,CACV2G,KAAM,KAGVE,MAAO,CACLH,GAAI,QACJ5G,KAAM,SACNE,WAAY,CACV2G,KAAM,KAGVG,MAAO,CACLJ,GAAI,QACJ5G,KAAM,OACNE,WAAY,CACV2G,KAAM,QAKd,cAAC,EAAD,CACE3G,WAAY,CACVgC,KAAM,YAERlC,KAAK,WACLC,MAAO,CACL0G,MAAO,CACLC,GAAI,QACJ5G,KAAM,MACNE,WAAY,CACV2G,KAAM,KAGVC,MAAO,CACLF,GAAI,QACJ5G,KAAM,QACNE,WAAY,CACV2G,KAAM,KAGVE,MAAO,CACLH,GAAI,QACJ5G,KAAM,SACNE,WAAY,CACV2G,KAAM,KAGVG,MAAO,CACLJ,GAAI,QACJ5G,KAAM,OACNE,WAAY,CACV2G,KAAM,QAKd,cAAC,EAAD,CACE7G,KAAK,SACLE,WAAY,CAAEgC,KAAM,UACpBjC,MAAO,CACL0G,MAAO,CACLC,GAAI,QACJ5G,KAAM,MACNE,WAAY,CACV2G,KAAM,KAGVC,MAAO,CACLF,GAAI,QACJ5G,KAAM,QACNE,WAAY,CACV2G,KAAM,KAGVE,MAAO,CACLH,GAAI,QACJ5G,KAAM,SACNE,WAAY,CACV2G,KAAM,KAGVG,MAAO,CACLJ,GAAI,QACJ5G,KAAM,OACNE,WAAY,CACV2G,KAAM,uBA/S5B,GAAyB/E,IAAMmF,WCzDhBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OAAO,cAAC,EAAD,IAASpD,SAASqD,eAAe,SAKjDX,M","file":"static/js/main.63f9330c.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Code = styled.pre`\r\n  margin: 10px;\r\n  padding: 10px;\r\n  line-height: 1.4em;\r\n  white-space: pre-wrap;\r\n  font-family: Consolas, 'Andale Mono WT', 'Andale Mono', 'Lucida Console', 'Lucida Sans Typewriter', 'DejaVu Sans Mono',\r\n    'Bitstream Vera Sans Mono', 'Liberation Mono', 'Nimbus Mono L', Monaco, 'Courier New', Courier, monospace;\r\n\r\n  background-color: #eff0f1;\r\n  overflow: auto;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  overflow: hidden;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Message = styled.div`\r\n  margin: 10px 10px 0px;\r\n  padding: 10px;\r\n  line-height: 1.4em;\r\n`\r\n","import * as React from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0px;\r\n    max-width: 100vw;\r\n    max-height: 100vh;\r\n    overflow: hidden;\r\n    box-sizing: border-box;\r\n    font-family: sans-serif;\r\n  }\r\n\r\n  *, :after, :before {\r\n    box-sizing: inherit;\r\n  }\r\n`;\r\n\r\nexport const PageContent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex: 1;\r\n  max-width: 100vw;\r\n  max-height: 93vh;\r\n`;\r\n\r\nexport const Page = ({ children }: { children: any }) => (\r\n  <PageContent>\r\n    {children}\r\n    <GlobalStyle />\r\n  </PageContent>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Sidebar = styled.div`\r\n  width: 200px;\r\n  background: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-shrink: 0;\r\n`;\r\n","import { IConfig, INode, REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Outer = styled.div`\r\n  margin-bottom: 1rem;\r\n  border: 0.5px solid grey;\r\n  padding: 20px 30px;\r\n  font-size: 14px;\r\n  background: white;\r\n  cursor: move;\r\n`;\r\n\r\nexport interface ISidebarItemProps {\r\n  type: string;\r\n  ports: INode[\"ports\"];\r\n  config?: IConfig;\r\n  properties?: any;\r\n}\r\n\r\nexport const SidebarItem = ({ type, ports, properties }: ISidebarItemProps) => {\r\n  return (\r\n    <Outer\r\n      draggable={true}\r\n      onDragStart={(event) => {\r\n        event.dataTransfer.setData(\r\n          REACT_FLOW_CHART,\r\n          JSON.stringify({ type, ports, properties })\r\n        );\r\n      }}\r\n    >\r\n      {type}\r\n    </Outer>\r\n  );\r\n};\r\n","import { IChart } from \"@mrblenny/react-flow-chart\";\r\nexport interface IVisible {\r\n  modalVisible: boolean;\r\n}\r\n\r\nexport const initialState: IChart & IVisible = {\r\n  offset: {\r\n    x: 0,\r\n    y: 0,\r\n  },\r\n  scale: 1,\r\n  nodes: {},\r\n  links: {},\r\n  selected: {},\r\n  hovered: {},\r\n  modalVisible: false,\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { cloneDeep, mapValues } from \"lodash\";\nimport { Message, PageContent, Sidebar, SidebarItem } from \"./components\";\nimport {\n  actions,\n  FlowChart,\n  INodeInnerDefaultProps,\n} from \"@mrblenny/react-flow-chart\";\nimport { initialState } from \"./misc/chartScheme\";\nimport styled from \"styled-components\";\nimport { Button, Modal, Layout, Menu } from \"antd\";\nimport {\n  DownloadOutlined,\n  ExportOutlined,\n  UploadOutlined,\n} from \"@ant-design/icons\";\nimport { saveAs } from \"file-saver\";\nimport yaml from \"js-yaml\";\n\nconst { Header, Content } = Layout;\nconst Outer = styled.div`\n  padding: 30px;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-right: 1rem;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  border: 1px solid cornflowerblue;\n  width: 100%;\n`;\n\n/**\n * Create the custom component,\n * Make sure it has the same prop signature\n */\nconst NodeInnerCustom = ({ node, config }: INodeInnerDefaultProps) => {\n  const [visible, setVisible] = React.useState(false);\n  switch (node.type) {\n    case \"function-input\":\n    case \"function-output\":\n    case \"s3-storage\":\n    case \"one-data-storage\":\n      return (\n        <Outer>\n          <p>{node.properties?.name || node.type}</p>\n        </Outer>\n      );\n    default:\n      return (\n        <Outer onDoubleClick={() => setVisible(true)}>\n          <Modal\n            title={node.properties?.name || node.type}\n            visible={visible}\n            onOk={() => {\n              node.properties = { ...node.properties, test: \"test\" };\n              setVisible(false);\n            }}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{ disabled: false }}\n            cancelButtonProps={{ disabled: false }}\n          ></Modal>\n          <p>{node.properties?.name || node.type}</p>\n        </Outer>\n      );\n  }\n};\n\nexport class App extends React.Component {\n  public state = cloneDeep(initialState);\n\n  public exportToYaml() {\n    const nodeValues = Object.values(this.state.nodes);\n    const oscarFxs = nodeValues\n      .filter((x: any) => x.type === \"oscar-fx\")\n      .map((node) => node.properties);\n    const awsFxs = nodeValues\n      .filter((x: any) => x.type === \"aws-fx\")\n      .map((node) => node.properties);\n    const oneDataStorage = nodeValues\n      .filter((x: any) => x.type === \"one-data-storage\")\n      .map((node) => node.properties);\n    const s3Storage = nodeValues\n      .filter((x: any) => x.type === \"s3-storage\")\n      .map((node) => node.properties);\n\n    const linkValues = Object.values(this.state.links);\n    console.log(linkValues);\n\n    const output = yaml.dump({\n      functions: { oscar: oscarFxs, aws: awsFxs },\n      storage_providers: {\n        s3: s3Storage,\n        onedata: oneDataStorage,\n      },\n    });\n    const blob = new Blob([output], {\n      type: \"text/plain;charset=utf-8\",\n    });\n    saveAs(blob, \"workflow.yaml\");\n  }\n\n  public exportState() {\n    const stateStringified = JSON.stringify(this.state);\n    const blob = new Blob([stateStringified], {\n      type: \"text/plain;charset=utf-8\",\n    });\n    saveAs(blob, \"state.json\");\n  }\n\n  public importState() {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.onchange = (e: any) => {\n      // var file = e!.target!.files[0];\n      console.log(e);\n      const fr = new FileReader();\n      fr.onload = async (e) => {\n        console.log(e!.target!.result);\n        e?.target?.result &&\n          this.setState(JSON.parse(e!.target!.result as string));\n      };\n\n      fr.readAsText(input.files![0]);\n    };\n    input.click();\n  }\n\n  public render() {\n    const chart = this.state;\n    const stateActions = mapValues(actions, (func: any) => (...args: any) =>\n      this.setState(func(...args))\n    ) as typeof actions;\n\n    return (\n      <div className=\"App\">\n        <Layout className=\"layout\">\n          <Header>\n            <Menu theme=\"dark\" mode=\"horizontal\">\n              <StyledButton\n                ghost\n                icon={<DownloadOutlined />}\n                onClick={() => this.exportState()}\n              >\n                Download state\n              </StyledButton>\n              <StyledButton\n                ghost\n                icon={<UploadOutlined />}\n                onClick={() => this.importState()}\n              >\n                Load state\n              </StyledButton>\n              <StyledButton\n                ghost\n                icon={<ExportOutlined />}\n                onClick={() => {\n                  this.exportToYaml();\n                }}\n              >\n                Export yaml\n              </StyledButton>\n            </Menu>\n          </Header>\n          <PageContent>\n            <FlowChart\n              chart={chart}\n              callbacks={stateActions}\n              Components={{\n                NodeInner: NodeInnerCustom,\n              }}\n            />\n            <Sidebar>\n              <Message>Drag and drop these items onto the canvas.</Message>\n              <SidebarItem\n                type=\"function-input\"\n                ports={{\n                  port1: {\n                    id: \"port1\",\n                    type: \"top\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port2: {\n                    id: \"port2\",\n                    type: \"right\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port3: {\n                    id: \"port3\",\n                    type: \"bottom\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port4: {\n                    id: \"port4\",\n                    type: \"left\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                }}\n              />\n              <SidebarItem\n                type=\"function-output\"\n                ports={{\n                  port1: {\n                    id: \"port1\",\n                    type: \"top\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port2: {\n                    id: \"port2\",\n                    type: \"right\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port3: {\n                    id: \"port3\",\n                    type: \"bottom\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port4: {\n                    id: \"port4\",\n                    type: \"left\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                }}\n              />\n              <SidebarItem\n                type=\"s3-storage\"\n                ports={{\n                  port1: {\n                    id: \"port1\",\n                    type: \"top\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port2: {\n                    id: \"port2\",\n                    type: \"right\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port3: {\n                    id: \"port3\",\n                    type: \"bottom\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port4: {\n                    id: \"port4\",\n                    type: \"left\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                }}\n              />\n              <SidebarItem\n                type=\"one-data-storage\"\n                ports={{\n                  port1: {\n                    id: \"port1\",\n                    type: \"top\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port2: {\n                    id: \"port2\",\n                    type: \"right\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port3: {\n                    id: \"port3\",\n                    type: \"bottom\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port4: {\n                    id: \"port4\",\n                    type: \"left\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                }}\n              />\n              <SidebarItem\n                properties={{\n                  name: \"oscar fx\",\n                }}\n                type=\"oscar-fx\"\n                ports={{\n                  port1: {\n                    id: \"port1\",\n                    type: \"top\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port2: {\n                    id: \"port2\",\n                    type: \"right\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port3: {\n                    id: \"port3\",\n                    type: \"bottom\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port4: {\n                    id: \"port4\",\n                    type: \"left\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                }}\n              />\n              <SidebarItem\n                type=\"aws-fx\"\n                properties={{ name: \"aws fx\" }}\n                ports={{\n                  port1: {\n                    id: \"port1\",\n                    type: \"top\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port2: {\n                    id: \"port2\",\n                    type: \"right\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port3: {\n                    id: \"port3\",\n                    type: \"bottom\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                  port4: {\n                    id: \"port4\",\n                    type: \"left\",\n                    properties: {\n                      path: \"\",\n                    },\n                  },\n                }}\n              />\n            </Sidebar>\n          </PageContent>\n        </Layout>\n      </div>\n    );\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}