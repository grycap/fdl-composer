{"version":3,"sources":["components/Code.tsx","components/Content.tsx","components/Message.tsx","components/Page.tsx","components/Sidebar.tsx","components/SidebarItem.tsx","misc/exampleChartState.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["styled","pre","div","Message","GlobalStyle","createGlobalStyle","PageContent","Page","children","Sidebar","Outer","SidebarItem","type","ports","properties","draggable","onDragStart","event","dataTransfer","setData","REACT_FLOW_CHART","JSON","stringify","chartSimple","offset","x","y","scale","nodes","node1","id","position","port1","value","port2","node2","node3","node4","links","link1","from","nodeId","portId","to","label","link2","link3","selected","hovered","Input","input","NodeInnerCustom","node","config","placeholder","onChange","e","console","log","onClick","stopPropagation","onMouseUp","onMouseDown","App","useState","chart","setChart","stateActions","mapValues","actions","func","className","callbacks","Components","NodeInner","custom","port3","port4","port5","port6","port7","port8","port9","port10","port11","port12","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8c23216.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Code = styled.pre`\r\n  margin: 10px;\r\n  padding: 10px;\r\n  line-height: 1.4em;\r\n  white-space: pre-wrap;\r\n  font-family: Consolas, 'Andale Mono WT', 'Andale Mono', 'Lucida Console', 'Lucida Sans Typewriter', 'DejaVu Sans Mono',\r\n    'Bitstream Vera Sans Mono', 'Liberation Mono', 'Nimbus Mono L', Monaco, 'Courier New', Courier, monospace;\r\n\r\n  background-color: #eff0f1;\r\n  overflow: auto;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  overflow: hidden;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Message = styled.div`\r\n  margin: 10px 10px 0px;\r\n  padding: 10px;\r\n  line-height: 1.4em;\r\n`\r\n","import * as React from 'react'\r\nimport styled, { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0px;\r\n    max-width: 100vw;\r\n    max-height: 100vh;\r\n    overflow: hidden;\r\n    box-sizing: border-box;\r\n    font-family: sans-serif;\r\n  }\r\n\r\n  *, :after, :before {\r\n    box-sizing: inherit;\r\n  }\r\n`\r\n\r\nconst PageContent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex: 1;\r\n  max-width: 100vw;\r\n  max-height: 100vh;\r\n`\r\n\r\nexport const Page = ({ children }: { children: any}) => (\r\n  <PageContent>\r\n    {children}\r\n    <GlobalStyle />\r\n  </PageContent>\r\n)\r\n","import styled from 'styled-components'\r\n\r\nexport const Sidebar = styled.div`\r\n  width: 300px;\r\n  background: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-shrink: 0;\r\n`\r\n","import { INode, REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Outer = styled.div`\r\n  padding: 20px 30px;\r\n  font-size: 14px;\r\n  background: white;\r\n  cursor: move;\r\n`;\r\n\r\nexport interface ISidebarItemProps {\r\n  type: string;\r\n  ports: INode[\"ports\"];\r\n  properties?: any;\r\n}\r\n\r\nexport const SidebarItem = ({ type, ports, properties }: ISidebarItemProps) => {\r\n  return (\r\n    <Outer\r\n      draggable={true}\r\n      onDragStart={(event) => {\r\n        event.dataTransfer.setData(\r\n          REACT_FLOW_CHART,\r\n          JSON.stringify({ type, ports, properties })\r\n        );\r\n      }}\r\n    >\r\n      {type}\r\n    </Outer>\r\n  );\r\n};\r\n","import { IChart } from \"@mrblenny/react-flow-chart\";\r\n\r\nexport const chartSimple: IChart = {\r\n  offset: {\r\n    x: 0,\r\n    y: 0,\r\n  },\r\n  scale: 1,\r\n  nodes: {\r\n    node1: {\r\n      id: 'node1',\r\n      type: 'output-only',\r\n      position: {\r\n        x: 300,\r\n        y: 100,\r\n      },\r\n      ports: {\r\n        port1: {\r\n          id: 'port1',\r\n          type: 'output',\r\n          properties: {\r\n            value: 'yes',\r\n          },\r\n        },\r\n        port2: {\r\n          id: 'port2',\r\n          type: 'output',\r\n          properties: {\r\n            value: 'no',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    node2: {\r\n      id: 'node2',\r\n      type: 'input-output',\r\n      position: {\r\n        x: 300,\r\n        y: 300,\r\n      },\r\n      ports: {\r\n        port1: {\r\n          id: 'port1',\r\n          type: 'input',\r\n        },\r\n        port2: {\r\n          id: 'port2',\r\n          type: 'output',\r\n        },\r\n      },\r\n    },\r\n    node3: {\r\n      id: 'node3',\r\n      type: 'input-output',\r\n      position: {\r\n        x: 100,\r\n        y: 600,\r\n      },\r\n      ports: {\r\n        port1: {\r\n          id: 'port1',\r\n          type: 'input',\r\n        },\r\n        port2: {\r\n          id: 'port2',\r\n          type: 'output',\r\n        },\r\n      },\r\n    },\r\n    node4: {\r\n      id: 'node4',\r\n      type: 'input-output',\r\n      position: {\r\n        x: 500,\r\n        y: 600,\r\n      },\r\n      ports: {\r\n        port1: {\r\n          id: 'port1',\r\n          type: 'input',\r\n        },\r\n        port2: {\r\n          id: 'port2',\r\n          type: 'output',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  links: {\r\n    link1: {\r\n      id: 'link1',\r\n      from: {\r\n        nodeId: 'node1',\r\n        portId: 'port2',\r\n      },\r\n      to: {\r\n        nodeId: 'node2',\r\n        portId: 'port1',\r\n      },\r\n      properties: {\r\n        label: 'example link label',\r\n      },\r\n    },\r\n    link2: {\r\n      id: 'link2',\r\n      from: {\r\n        nodeId: 'node2',\r\n        portId: 'port2',\r\n      },\r\n      to: {\r\n        nodeId: 'node3',\r\n        portId: 'port1',\r\n      },\r\n      properties: {\r\n        label: 'another example link label',\r\n      },\r\n    },\r\n    link3: {\r\n      id: 'link3',\r\n      from: {\r\n        nodeId: 'node2',\r\n        portId: 'port2',\r\n      },\r\n      to: {\r\n        nodeId: 'node4',\r\n        portId: 'port1',\r\n      },\r\n    },\r\n  },\r\n  selected: {},\r\n  hovered: {},\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { mapValues } from \"lodash\";\nimport { Message, Page, Sidebar, SidebarItem } from \"./components\";\nimport {\n  actions,\n  FlowChart,\n  IChart,\n  INodeInnerDefaultProps,\n} from \"@mrblenny/react-flow-chart\";\nimport { chartSimple } from \"./misc/exampleChartState\";\nimport styled from \"styled-components\";\n\nconst Outer = styled.div`\n  padding: 30px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  border: 1px solid cornflowerblue;\n  width: 100%;\n`;\n\n/**\n * Create the custom component,\n * Make sure it has the same prop signature\n */\nconst NodeInnerCustom = ({ node, config }: INodeInnerDefaultProps) => {\n  if (node.type === \"output-only\") {\n    return (\n      <Outer>\n        <p>Use Node inner to customise the content of the node</p>\n      </Outer>\n    );\n  } else {\n    return (\n      <Outer>\n        <p>Add custom displays for each node.type</p>\n        <p>You may need to stop event propagation so your forms work.</p>\n        <br />\n        <Input\n          type=\"number\"\n          placeholder=\"Some Input\"\n          onChange={(e) => console.log(e)}\n          onClick={(e) => e.stopPropagation()}\n          onMouseUp={(e) => e.stopPropagation()}\n          onMouseDown={(e) => e.stopPropagation()}\n        />\n      </Outer>\n    );\n  }\n};\nconst App: React.FC = () => {\n  const [chart, setChart] = useState<IChart>(chartSimple);\n\n  const stateActions = mapValues(actions, (func: any) => (...args: any) =>\n    setChart(func(...args))\n  ) as typeof actions;\n\n  return (\n    <div className=\"App\">\n      <Page>\n        <FlowChart\n          chart={chart}\n          callbacks={stateActions}\n          Components={{\n            NodeInner: NodeInnerCustom,\n          }}\n        />\n        <Sidebar>\n          <Message>Drag and drop these items onto the canvas.</Message>\n          <SidebarItem\n            type=\"top/bottom\"\n            ports={{\n              port1: {\n                id: \"port1\",\n                type: \"top\",\n                properties: {\n                  custom: \"property\",\n                },\n              },\n              port2: {\n                id: \"port1\",\n                type: \"bottom\",\n                properties: {\n                  custom: \"property\",\n                },\n              },\n            }}\n            properties={{\n              custom: \"property\",\n            }}\n          />\n          <SidebarItem\n            type=\"bottom-only\"\n            ports={{\n              port1: {\n                id: \"port1\",\n                type: \"bottom\",\n                properties: {\n                  custom: \"property\",\n                },\n              },\n            }}\n          />\n          <SidebarItem\n            type=\"left-right\"\n            ports={{\n              port1: {\n                id: \"port1\",\n                type: \"left\",\n                properties: {\n                  custom: \"property\",\n                },\n              },\n              port2: {\n                id: \"port2\",\n                type: \"right\",\n                properties: {\n                  custom: \"property\",\n                },\n              },\n            }}\n          />\n          <SidebarItem\n            type=\"all-sides\"\n            ports={{\n              port1: {\n                id: \"port1\",\n                type: \"left\",\n              },\n              port2: {\n                id: \"port2\",\n                type: \"right\",\n              },\n              port3: {\n                id: \"port3\",\n                type: \"top\",\n              },\n              port4: {\n                id: \"port4\",\n                type: \"bottom\",\n              },\n            }}\n          />\n          <SidebarItem\n            type=\"lots-of-ports\"\n            ports={{\n              port1: {\n                id: \"port1\",\n                type: \"left\",\n              },\n              port2: {\n                id: \"port2\",\n                type: \"right\",\n              },\n              port3: {\n                id: \"port3\",\n                type: \"top\",\n              },\n              port4: {\n                id: \"port4\",\n                type: \"bottom\",\n              },\n              port5: {\n                id: \"port5\",\n                type: \"left\",\n              },\n              port6: {\n                id: \"port6\",\n                type: \"right\",\n              },\n              port7: {\n                id: \"port7\",\n                type: \"top\",\n              },\n              port8: {\n                id: \"port8\",\n                type: \"bottom\",\n              },\n              port9: {\n                id: \"port9\",\n                type: \"left\",\n              },\n              port10: {\n                id: \"port10\",\n                type: \"right\",\n              },\n              port11: {\n                id: \"port11\",\n                type: \"top\",\n              },\n              port12: {\n                id: \"port12\",\n                type: \"bottom\",\n              },\n            }}\n          />\n        </Sidebar>\n      </Page>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}