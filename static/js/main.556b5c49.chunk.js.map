{"version":3,"sources":["components/Code.tsx","components/Content.tsx","components/Message.tsx","components/Page.tsx","components/Sidebar.tsx","components/SidebarItem.tsx","misc/chartScheme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["styled","pre","div","Message","GlobalStyle","createGlobalStyle","PageContent","Page","children","Sidebar","Outer","SidebarItem","type","ports","properties","draggable","onDragStart","event","dataTransfer","setData","REACT_FLOW_CHART","JSON","stringify","display","chartScheme","offset","x","y","scale","nodes","links","selected","hovered","NodeInnerCustom","input","node","config","console","log","style","flexDirection","justifyContent","shape","icon","EditOutlined","App","state","cloneDeep","chart","this","stateActions","mapValues","actions","func","setState","className","callbacks","Components","NodeInner","port1","id","custom","port2","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8qBAEoBA,UAAOC,IAAV,K,qJCAMD,UAAOE,IAAV,K,0ICAb,IAAMC,EAAUH,UAAOE,IAAV,K,0cCCpB,IAAME,EAAcC,4BAAH,KAeXC,EAAcN,UAAOE,IAAV,KAQJK,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAClB,eAACF,EAAD,WACGE,EACD,cAACJ,EAAD,Q,8KC3BG,IAAMK,EAAUT,UAAOE,IAAV,K,sNCEpB,IAAMQ,EAAQV,UAAOE,IAAV,KAeES,EAAc,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,WACzC,OACE,cAACJ,EAAD,CACEK,WAAW,EACXC,YAAa,SAACC,GACZA,EAAMC,aAAaC,QACjBC,mBACAC,KAAKC,UAAU,CAAEV,OAAMC,QAAOC,iBALpC,UASa,OAAVA,QAAU,IAAVA,OAAA,EAAAA,EAAYS,UAAWX,KC5BjBY,EAAsB,CACjCC,OAAQ,CACNC,EAAG,EACHC,EAAG,GAELC,MAAO,EACPC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,QAAS,I,yPCUX,IAAMtB,EAAQV,UAAOE,IAAV,KAcL+B,GAVQjC,UAAOkC,MAAV,KAUa,SAAC,GAA8C,IAAD,IAA3CC,EAA2C,EAA3CA,KAA2C,EAArCC,OAG/B,OAFAC,QAAQC,IAAIH,GAEJA,EAAKvB,MACX,IAAK,iBACL,IAAK,kBACL,IAAK,mBACH,OACE,cAAC,EAAD,UACE,6BAAI,UAAAuB,EAAKrB,kBAAL,eAAiBS,UAAWY,EAAKvB,SAG3C,QACE,OACE,eAAC,EAAD,WACE,6BAAI,UAAAuB,EAAKrB,kBAAL,eAAiBS,UAAWY,EAAKvB,OACrC,uBACA,qBACE2B,MAAO,CACLhB,QAAS,OACTiB,cAAe,MACfC,eAAgB,gBAJpB,SAOE,cAAC,IAAD,CACE7B,KAAK,UACL8B,MAAM,SACNC,KAAM,cAACC,EAAA,EAAD,cAkBPC,EAAb,4MACSC,MAAQC,oBAAUvB,GAD3B,uDAEmB,IAAD,OACRwB,EAAQC,KAAKH,MACbI,EAAeC,oBAAUC,WAAS,SAACC,GAAD,OAAe,kBACrD,EAAKC,SAASD,EAAI,WAAJ,kBAEhB,OACE,qBAAKE,UAAU,MAAf,SACE,eAAC,EAAD,WACE,cAAC,YAAD,CACEP,MAAOA,EACPQ,UAAWN,EACXO,WAAY,CACVC,UAAWzB,KAGf,eAACxB,EAAD,WACE,cAACN,EAAD,yDACA,cAAC,EAAD,CACES,KAAK,iBACLC,MAAO,CACL8C,MAAO,CACLC,GAAI,QACJhD,KAAM,SACNE,WAAY,CACV+C,OAAQ,aAGZC,MAAO,CACLF,GAAI,QACJhD,KAAM,QACNE,WAAY,CACV+C,OAAQ,gBAKhB,cAAC,EAAD,CACEjD,KAAK,kBACLC,MAAO,CACL8C,MAAO,CACLC,GAAI,QACJhD,KAAM,MACNE,WAAY,CACV+C,OAAQ,aAGZC,MAAO,CACLF,GAAI,QACJhD,KAAM,SACNE,WAAY,CACV+C,OAAQ,gBAKhB,cAAC,EAAD,CACEjD,KAAK,aACLC,MAAO,CACL8C,MAAO,CACLC,GAAI,QACJhD,KAAM,OACNE,WAAY,CACV+C,OAAQ,cAId/C,WAAY,CACV+C,OAAQ,cAGZ,cAAC,EAAD,CACEjD,KAAK,mBACLC,MAAO,CACL8C,MAAO,CACLC,GAAI,QACJhD,KAAM,OACNE,WAAY,CACV+C,OAAQ,cAId/C,WAAY,CACV+C,OAAQ,cAGZ,cAAC,EAAD,CACE/C,WAAY,CAAES,QAAS,YACvBX,KAAK,WACLC,MAAO,CACL8C,MAAO,CACLC,GAAI,QACJhD,KAAM,MACNE,WAAY,CACV+C,OAAQ,aAGZC,MAAO,CACLF,GAAI,QACJhD,KAAM,SACNE,WAAY,CACV+C,OAAQ,gBAKhB,cAAC,EAAD,CACEjD,KAAK,WACLE,WAAY,CAAES,QAAS,UACvBV,MAAO,CACL8C,MAAO,CACLC,GAAI,QACJhD,KAAM,MACNE,WAAY,CACV+C,OAAQ,aAGZC,MAAO,CACLF,GAAI,QACJhD,KAAM,SACNE,WAAY,CACV+C,OAAQ,4BA1H5B,GAAyBE,IAAMC,WClEhBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,K","file":"static/js/main.556b5c49.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Code = styled.pre`\r\n  margin: 10px;\r\n  padding: 10px;\r\n  line-height: 1.4em;\r\n  white-space: pre-wrap;\r\n  font-family: Consolas, 'Andale Mono WT', 'Andale Mono', 'Lucida Console', 'Lucida Sans Typewriter', 'DejaVu Sans Mono',\r\n    'Bitstream Vera Sans Mono', 'Liberation Mono', 'Nimbus Mono L', Monaco, 'Courier New', Courier, monospace;\r\n\r\n  background-color: #eff0f1;\r\n  overflow: auto;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  overflow: hidden;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Message = styled.div`\r\n  margin: 10px 10px 0px;\r\n  padding: 10px;\r\n  line-height: 1.4em;\r\n`\r\n","import * as React from 'react'\r\nimport styled, { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0px;\r\n    max-width: 100vw;\r\n    max-height: 100vh;\r\n    overflow: hidden;\r\n    box-sizing: border-box;\r\n    font-family: sans-serif;\r\n  }\r\n\r\n  *, :after, :before {\r\n    box-sizing: inherit;\r\n  }\r\n`\r\n\r\nconst PageContent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex: 1;\r\n  max-width: 100vw;\r\n  max-height: 100vh;\r\n`\r\n\r\nexport const Page = ({ children }: { children: any}) => (\r\n  <PageContent>\r\n    {children}\r\n    <GlobalStyle />\r\n  </PageContent>\r\n)\r\n","import styled from 'styled-components'\r\n\r\nexport const Sidebar = styled.div`\r\n  width: 300px;\r\n  background: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-shrink: 0;\r\n`\r\n","import { INode, REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Outer = styled.div`\r\n  margin-bottom: 1rem;\r\n  border: 0.5px solid grey;\r\n  padding: 20px 30px;\r\n  font-size: 14px;\r\n  background: white;\r\n  cursor: move;\r\n`;\r\n\r\nexport interface ISidebarItemProps {\r\n  type: string;\r\n  ports: INode[\"ports\"];\r\n  properties?: any;\r\n}\r\n\r\nexport const SidebarItem = ({ type, ports, properties }: ISidebarItemProps) => {\r\n  return (\r\n    <Outer\r\n      draggable={true}\r\n      onDragStart={(event) => {\r\n        event.dataTransfer.setData(\r\n          REACT_FLOW_CHART,\r\n          JSON.stringify({ type, ports, properties })\r\n        );\r\n      }}\r\n    >\r\n      {properties?.display || type}\r\n    </Outer>\r\n  );\r\n};\r\n","import { IChart } from \"@mrblenny/react-flow-chart\";\r\n\r\nexport const chartScheme: IChart = {\r\n  offset: {\r\n    x: 0,\r\n    y: 0,\r\n  },\r\n  scale: 1,\r\n  nodes: {},\r\n  links: {},\r\n  selected: {},\r\n  hovered: {},\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { cloneDeep, mapValues } from \"lodash\";\nimport { Message, Page, Sidebar, SidebarItem } from \"./components\";\nimport {\n  actions,\n  FlowChart,\n  IChart,\n  INodeInnerDefaultProps,\n} from \"@mrblenny/react-flow-chart\";\nimport { chartScheme } from \"./misc/chartScheme\";\nimport styled from \"styled-components\";\nimport { Button } from \"antd\";\n\nimport {\n  AmazonOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  FunctionOutlined,\n} from \"@ant-design/icons\";\n\nconst Outer = styled.div`\n  padding: 30px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  border: 1px solid cornflowerblue;\n  width: 100%;\n`;\n\n/**\n * Create the custom component,\n * Make sure it has the same prop signature\n */\nconst NodeInnerCustom = ({ node, config }: INodeInnerDefaultProps) => {\n  console.log(node);\n\n  switch (node.type) {\n    case \"Function input\":\n    case \"Function output\":\n    case \"Storage provider\":\n      return (\n        <Outer>\n          <p>{node.properties?.display || node.type}</p>\n        </Outer>\n      );\n    default:\n      return (\n        <Outer>\n          <p>{node.properties?.display || node.type}</p>\n          <br />\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<EditOutlined />}\n            ></Button>\n\n            {/* <Button danger shape=\"circle\" icon={<DeleteOutlined />}></Button> */}\n          </div>\n          {/* <Input\n            type=\"number\"\n            placeholder=\"Some Input\"\n            onChange={(e) => console.log(e)}\n            onClick={(e) => e.stopPropagation()}\n            onMouseUp={(e) => e.stopPropagation()}\n            onMouseDown={(e) => e.stopPropagation()}\n          /> */}\n        </Outer>\n      );\n  }\n};\n\nexport class App extends React.Component {\n  public state = cloneDeep(chartScheme);\n  public render() {\n    const chart = this.state;\n    const stateActions = mapValues(actions, (func: any) => (...args: any) =>\n      this.setState(func(...args))\n    ) as typeof actions;\n    return (\n      <div className=\"App\">\n        <Page>\n          <FlowChart\n            chart={chart}\n            callbacks={stateActions}\n            Components={{\n              NodeInner: NodeInnerCustom,\n            }}\n          />\n          <Sidebar>\n            <Message>Drag and drop these items onto the canvas.</Message>\n            <SidebarItem\n              type=\"function input\"\n              ports={{\n                port1: {\n                  id: \"port1\",\n                  type: \"bottom\",\n                  properties: {\n                    custom: \"property\",\n                  },\n                },\n                port2: {\n                  id: \"port2\",\n                  type: \"right\",\n                  properties: {\n                    custom: \"property\",\n                  },\n                },\n              }}\n            />\n            <SidebarItem\n              type=\"function output\"\n              ports={{\n                port1: {\n                  id: \"port1\",\n                  type: \"top\",\n                  properties: {\n                    custom: \"property\",\n                  },\n                },\n                port2: {\n                  id: \"port2\",\n                  type: \"bottom\",\n                  properties: {\n                    custom: \"property\",\n                  },\n                },\n              }}\n            />\n            <SidebarItem\n              type=\"s3 storage\"\n              ports={{\n                port1: {\n                  id: \"port1\",\n                  type: \"left\",\n                  properties: {\n                    custom: \"property\",\n                  },\n                },\n              }}\n              properties={{\n                custom: \"property\",\n              }}\n            />\n            <SidebarItem\n              type=\"one-data storage\"\n              ports={{\n                port1: {\n                  id: \"port1\",\n                  type: \"left\",\n                  properties: {\n                    custom: \"property\",\n                  },\n                },\n              }}\n              properties={{\n                custom: \"property\",\n              }}\n            />\n            <SidebarItem\n              properties={{ display: \"oscar fx\" }}\n              type=\"Function\"\n              ports={{\n                port1: {\n                  id: \"port1\",\n                  type: \"top\",\n                  properties: {\n                    custom: \"property\",\n                  },\n                },\n                port2: {\n                  id: \"port2\",\n                  type: \"bottom\",\n                  properties: {\n                    custom: \"property\",\n                  },\n                },\n              }}\n            />\n            <SidebarItem\n              type=\"Function\"\n              properties={{ display: \"aws fx\" }}\n              ports={{\n                port1: {\n                  id: \"port1\",\n                  type: \"top\",\n                  properties: {\n                    custom: \"property\",\n                  },\n                },\n                port2: {\n                  id: \"port2\",\n                  type: \"bottom\",\n                  properties: {\n                    custom: \"property\",\n                  },\n                },\n              }}\n            />\n          </Sidebar>\n        </Page>\n      </div>\n    );\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}